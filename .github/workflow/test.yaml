name: Python Tests

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [-f requirements.txt]; then pip install -r requirements.txt

      - name: Run test
        run: |
          pytest
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: test  # Runs only if tests pass
    if: github.event.pull_request.merged == true  # Ensure it runs only on merge

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Set up

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m venv /opt/venv
          pip install -r requirements.txt

      - name: SSH into Server & Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Install Docker if not installed
            if ! command -v docker &> /dev/null
            then
                sudo apt update && sudo apt install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
            fi

            # Install Nginx if not installed
            if ! command -v nginx &> /dev/null
            then
                sudo apt install -y nginx
                sudo systemctl start nginx
                sudo systemctl enable nginx
            fi

            # Navigate to project directory
            cd /home/${{ secrets.SERVER_USER }}/fastapi-book-project1

            # Pull latest code
            git pull origin main

            # Stop existing containers
            docker-compose down || true

            # Remove old images
            docker system prune -af || true

            # Rebuild and restart
            docker-compose up --build -d
 